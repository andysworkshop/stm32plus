HOW TO BUILD AND INSTALL STM32PLUS

    This readme will help you to understand how you can build and
    install stm32plus.

PREREQUISITES

    1) Mentor Graphics (formerly CodeSourcery) 'Sourcery G++
       Lite'. Download the most recent version, install it on your
       system and ensure that it's in your path by attempting to
       execute one of the commands:

       $ arm-none-eabi-g++
       arm-none-eabi-g++.exe: no input files

    2) 'scons'. Writing Makefiles to cope with all the variant builds
       was driving me crazy so I switched to 'scons' and have never
       looked back. If you don't already have it then google it and
       download and install it on to your system from the official
       website.

ADDITIONAL PREREQUISITES FOR WINDOWS SYSTEMS   

    1) cygwin, msys or any other system that makes your build
       environment look like Unix. I use cygwin. Attempting to build
       out of something as lobotomised as a Windows 'cmd' shell is not
       supported.

    2) Windows builds under cygwin MUST use the cygwin supplied python
       and the source build of scons. Get python from the official
       cygwin update site. Get scons from
       http://www.scons.org/download.php and select "Zip file" or
       "Gzip tar file" and install it using setup.py from the cygwin
       bash prompt.

       DO NOT get windows installer versions of python or scons. They
       are not compatible with cygwin.

HOW TO BUILD

    1) Change directory to the top-level directory containing the
       'SConstruct' file.

    2) stm32plus supports the STM32F103 HD and STM32F4 series
       MCUs. Decide which one you want to build for. You also need to
       know your external oscillator (HSE) speed and you need to
       decide on whether you want to build a debug (-O0), small (-Os)
       or fast (-O3) library.

       You can build all of the above combinations side-by-side if you
       so wish by executing 'scons' multiple times.

    3) Execute scons with the parameters that define the build:

         mode:
           debug/fast/small. Debug = -O0, Fast = -O3, Small = -Os

         mcu:
           f1hd/f4. f1hd = STM32F103HD series. f4 = STM32F4xx series.

         hse: 
           Your external oscillator speed in Hz. Some of the ST
           standard peripheral library code uses the HSE_VALUE #define
           that we set here.

         Examples:
           scons mode=debug mcu=f1hd hse=8000000
           scons mode=fast mcu=f1hd hse=8000000 install
           scons mode=small mcu=f4 hse=8000000 install
           scons mode=debug mcu=f4 hse=8000000 -j4 install
           
       The -j<N> option can be passed to scons to do a parallel
       build. On a multicore CPU this can greatly accelerate the
       build. Set <N> to approximately the number of cores that you
       have.

       The 'install' option will install the library and the examples
       into subdirectories of /usr/lib/stm32plus/VERSION. This
       location can be customised by editing the 'SConstruct' file.

A NOTE ON THE EXAMPLES

       The example files are designed to run on either the
       512/64Kb/72MHz STM32F103 or the 1024Kb/128Kb/168Mhz STM32F4.

       It is the linker script (Linker.ld) and the system startup code
       (System.c) that specify these things. For example, if you
       wanted to change the core clock then you need to look at
       System.c (SystemCoreClock is a key variable). If you want to
       change the memory size then you need to look at Linker.ld. The
       stm32plus library itself is clock-speed and memory-independent.
